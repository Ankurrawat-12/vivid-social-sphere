
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://oxawssvosysharsvbqlq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94YXdzc3Zvc3lzaGFyc3ZicWxxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYyMTQ5MDMsImV4cCI6MjA2MTc5MDkwM30.T0OjZw5bBj0Hu2wK_BCsNwXqqAzdv-JRAdTM5k6h_Fs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const createBucketIfNotExists = async (bucketName: string) => {
  try {
    // Check if bucket exists first
    const { data: buckets, error: getBucketsError } = await supabase.storage.listBuckets();
    if (getBucketsError) throw getBucketsError;

    // If bucket doesn't exist, create it
    if (!buckets.some(bucket => bucket.name === bucketName)) {
      const { error: createBucketError } = await supabase.storage.createBucket(bucketName, {
        public: true,
        fileSizeLimit: 10485760, // 10MB in bytes
      });
      if (createBucketError) throw createBucketError;
      console.log(`Bucket '${bucketName}' created successfully`);
    }
  } catch (error) {
    console.error(`Error with bucket '${bucketName}':`, error);
  }
};

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    global: {
      headers: {
        'x-app-version': '1.0.0',
      },
    },
  }
);
